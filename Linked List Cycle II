/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        
        if(head==null||head.next==null) return null;
        
        ListNode fast=head;
        ListNode slow=head;
        
        if(hasCycle(fast,slow)){
            fast=head;
            while(fast!=slow){
                fast=fast.next;
                slow=slow.next;
            }
              return fast;
        }else{
            return null;
        }
       
      
    }
    
    public boolean hasCycle(ListNode fast,ListNode slow){
    while(fast!=null && fast.next!=null){
          fast=fast.next.next;
          slow=slow.next;
          if(fast==slow) return true;
        }
        return false;
    }
}
